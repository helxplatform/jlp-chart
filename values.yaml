# Default values for jlp-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# The professor's ONYEN. Will be used to name the pod and to satisfy authentication.
professorOnyen: ""
# The professor's full name. Used only for UI purposes.
professorName: ""
# Class IDs that the professor is teaching. Used to specify which class PVCs to mount, among other things.
classIDsTeaching:
  - '1'

image:
  repository: containers.renci.org/helxplatform/jupyter-lab-prof
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "develop"

imagePullSecrets: []
  # - name: image-pull-secret

nameOverride: "jlp"
fullnameOverride: "jupyter-lab-prof"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 30000

service:
  type: ClusterIP
  port: 8888

ingress:
  enabled: false
  className: ""
  annotations: {}
  #   cert-manager.io/cluster-issuer: letsencrypt
  # hosts:
  #   - host: eduhelx-dev-jlp.apps.renci.org
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: 
  #  - secretName: eduhelx-dev-jlp.apps.renci.org-tls
  #    hosts:
  #      - eduhelx-dev-jlp.apps.renci.org

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Though the default name "eduhelx_classname" will work for simplistic
# testing environments, make sure to override the database name below
# with the actual database name otherwise.
postgresql:
  enabled: true
  primary:
    initdb:
      scripts:
        create-db.sql:
          CREATE DATABASE eduhelx_classname;
        create-schema.sql: |
          \connect eduhelx_classname;
          CREATE TABLE student (
            id SERIAL primary key,
            first_name text NOT NULL,
            last_name text NOT NULL,
            student_onyen text NOT NULL UNIQUE,
            professor_onyen text NOT NULL
          );
          CREATE TABLE assignment (
            id SERIAL PRIMARY KEY,
            name TEXT NOT NULL,
            git_remote_url text NOT NULL,
            revision_count INTEGER DEFAULT 0,
            created_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            released_date TIMESTAMP WITH TIME ZONE NOT NULL,
            last_modified_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            due_date TIMESTAMP WITH TIME ZONE NOT NULL
          );
          CREATE TABLE submission (
            id SERIAL PRIMARY KEY,
            student_id INTEGER REFERENCES student (id) NOT NULL,
            assignment_id INTEGER REFERENCES assignment (id) NOT NULL,
            commit_id VARCHAR(255),
            submission_time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
          );
          CREATE TABLE extra_time (
            id SERIAL PRIMARY KEY,
            student_id INTEGER REFERENCES student (id) NOT NULL,
            assignment_id INTEGER REFERENCES assignment (id) NOT NULL,
            time INTERVAL NOT NULL,
            UNIQUE (student_id, assignment_id) 
          );

